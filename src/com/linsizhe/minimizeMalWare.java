package com.linsizhe;


// union find disjoint sets. For each set count # of malware within.
// if the number in initial is the only one in the set, removing it will remove all NODES
// otherwise zero.
// use this to find remove which intial would reduce the max.
public class minimizeMalWare {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        int n = graph[0].length;
        int[] parents = new int[n];
        for (int i = 0; i < n; i++) {
            parents[i] = i;
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (graph[i][j] == 1) {
                    union(i, j, parents);
                }
            }
        }
        int[] counts = new int[n];
        int[] infectNums = new int[n];

        for (int i = 0; i < n; i++) {
            int root = root(i, parents);
            counts[root]++;
        }

        // count total infect nodes in each set.
        for (int i : initial) {
            int root = root(i, parents);
            infectNums[root]++;
        }

        int maxReduce = 0;
        int maxIdx = initial[0];
        for (int i : initial) {
            int root = root(i, parents);
            int canReduce = infectNums[root] == 1? counts[root] : 0;
            if (canReduce > maxReduce) {
                maxReduce = canReduce;
                maxIdx = i;
            } else if (canReduce == maxReduce && i < maxIdx) {
                maxIdx = i;
            }
        }
        return maxIdx;
    }


    private int root(int x, int[] parents) {
        if(x == parents[x]) {
            return x;
        }
        while (x != parents[x]) {
            parents[x] = parents[parents[x]];
            x = parents[x];
        }
        return x;
    }

    private void union(int x, int y, int[] parents) {
        int i = root(x, parents);
        int j = root(y, parents);
        parents[i] = j;
    }
    public static void main(String[] args) {
        int[][] inputs = {{1,0,0,0,1,0,0,0},{0,1,1,0,0,1,0,0},{0,1,1,0,1,0,0,0},{0,0,0,1,1,0,0,0},{1,0,1,1,1,0,0,1},{0,1,0,0,0,1,0,0},{0,0,0,0,0,0,1,1},{0,0,0,0,1,0,1,1}};
        int[] initials = {7, 2};
        minimizeMalWare mm = new minimizeMalWare();
        System.out.println(mm.minMalwareSpread(inputs, initials));
    }

}
